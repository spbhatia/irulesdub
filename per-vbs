Option Explicit

Sub RunHealthCheck()
    Dim lastRow As Long
    Dim i As Long
    
    Dim server As String
    Dim port As String
    Dim path As String
    Dim fqdn As String
    Dim proto As String
    Dim result As String

    lastRow = Cells(Rows.Count, "G").End(xlUp).Row

    For i = 6 To lastRow
        server = Trim(Cells(i, "G").Value)
        If server = "" Then GoTo NextRow

        port = Trim(Cells(i, "I").Value)
        path = Trim(Cells(i, "M").Value)
        fqdn = Trim(Cells(i, "E").Value)
        proto = UCase(Trim(Cells(i, "K").Value))

        If proto = "TCP" Then
            result = CheckTCP(server, port)
        ElseIf proto = "HTTP" Or proto = "HTTPS" Then
            result = CheckHTTP(server, port, path, fqdn, proto)
        Else
            result = "Unknown protocol: " & proto
        End If

        Cells(i, "N").Value = result
NextRow:
    Next i

    MsgBox "Health Check Completed!"
End Sub

Function CheckTCP(server As String, port As String) As String
    Dim cmd As String
    Dim output As String

    ' Use invalid telnet option to force quick exit after connection attempt
    cmd = "curl -v telnet://" & server & ":" & port & " -t BOGUS=1 2>&1"
    output = ExecCurlFull(cmd)

    If InStr(1, output, "Connected to " & server & " port " & port, vbTextCompare) > 0 Then
        CheckTCP = "TCP Connected"
    ElseIf InStr(1, output, "Connection refused", vbTextCompare) > 0 Then
        CheckTCP = "TCP Connection refused"
    ElseIf InStr(1, output, "Could not resolve host", vbTextCompare) > 0 Then
        CheckTCP = "TCP Hostname cannot be resolved"
    ElseIf InStr(1, output, "timed out", vbTextCompare) > 0 Then
        CheckTCP = "TCP Connection timeout"
    Else
        CheckTCP = "TCP Connection failed"
    End If
End Function

Function CheckHTTP(server As String, port As String, path As String, _
                   fqdn As String, proto As String) As String
    Dim url As String
    Dim cmd As String
    Dim output As String
    Dim hostHeader As String

    url = proto & "://" & server & ":" & port & "/" & path
    hostHeader = " -H ""Host: " & fqdn & """"

    ' HEAD with Host header
    cmd = "curl -N -I -k --connect-timeout 10 --max-time 10 """ & url & """ " & hostHeader & " 2>&1"
    output = ExecCurlFull(cmd)

    If InStr(output, "200") > 0 Then
        CheckHTTP = "Health check status is Up"
    ElseIf InStr(output, "401") > 0 Then
        CheckHTTP = "Authentication is on preventing server Health check"
    ElseIf InStr(output, "404") > 0 Then
        ' Retry HEAD without Host header
        cmd = "curl -N -I -k --connect-timeout 10 --max-time 10 """ & url & """ 2>&1"
        output = ExecCurlFull(cmd)
        If InStr(output, "200") > 0 Then
            CheckHTTP = "Health check status is Up"
        Else
            CheckHTTP = "Health check status is Down (404)"
        End If
    ElseIf InStr(output, "405") > 0 Then
        ' Try GET with Host header
        cmd = "curl -N -i -k --connect-timeout 10 --max-time 10 """ & url & """ " & hostHeader & " 2>&1"
        output = ExecCurlFull(cmd)
        If InStr(output, "200") > 0 Then
            CheckHTTP = "Http HEAD method is not permitted, GET method is permitted"
        Else
            CheckHTTP = "Health check status is Down"
        End If
    ElseIf InStr(output, "(7)") > 0 Or InStr(output, "(35)") > 0 Or InStr(output, "(60)") > 0 Then
        ' Try HTTP instead of HTTPS
        If proto = "HTTPS" Then
            url = "http://" & server & ":" & port & "/" & path
            cmd = "curl -N -I -k --connect-timeout 10 --max-time 10 """ & url & """ " & hostHeader & " 2>&1"
            output = ExecCurlFull(cmd)
            If InStr(output, "200") > 0 Then
                CheckHTTP = "Health check status is down on https, Up on http"
            Else
                CheckHTTP = "Health check status is Down (HTTPS errors persist)"
            End If
        Else
            CheckHTTP = "Health check status is Down"
        End If
    ElseIf InStr(output, "Hostname was NOT found") > 0 Or _
           InStr(output, "Could not resolve host") > 0 Then
        CheckHTTP = "FQDN cannot be resolved"
    Else
        CheckHTTP = "Health check status indeterminate"
    End If
End Function

Function ExecCurlFull(cmd As String) As String
    Dim sh As Object, proc As Object
    Dim line As String, output As String

    Set sh = CreateObject("WScript.Shell")
    Set proc = sh.Exec("cmd /c " & cmd)
    Do While proc.Status = 0
        DoEvents
    Loop
    Do While Not proc.StdOut.AtEndOfStream
        line = proc.StdOut.ReadLine
        output = output & line & vbCrLf
    Loop
    Do While Not proc.StdErr.AtEndOfStream
        line = proc.StdErr.ReadLine
        output = output & line & vbCrLf
    Loop
    ExecCurlFull = output
End Function
