def read_config(file_path):
    start_parsing = False
    virtual_server_name = None
    client_side_profiles = []
    results = []
    in_virtual_server = False
    profile_block = False  # Initialize this variable outside the loop to avoid UnboundLocalError

    with open(file_path, 'r') as file:
        for line in file:
            line = line.strip()

            # Start parsing after the specific marker text
            if '############ MultiConfigPart Running configuration (Not deployable)' in line:
                start_parsing = True
                continue

            if start_parsing:
                # Check if a new virtual server block starts
                if line.startswith('ltm virtual'):
                    if '/common' in line:
                        continue
                    # Save previous virtual server info if exists
                    if virtual_server_name and in_virtual_server:
                        results.append({
                            'virtual_server': virtual_server_name,
                            'client_side_profiles': client_side_profiles
                        })
                    virtual_server_name = line.split(' ')[2]  # Extract virtual server name
                    client_side_profiles = []
                    in_virtual_server = True  # Now inside a virtual server block
                    profile_block = False  # Reset profile block status

                # Detect end of virtual server block
                if 'vs-index' in line and in_virtual_server:
                    results.append({
                        'virtual_server': virtual_server_name,
                        'client_side_profiles': client_side_profiles
                    })
                    virtual_server_name = None
                    client_side_profiles = []
                    in_virtual_server = False
                    profile_block = False  # Ensure profile block is also reset
                    continue

                # Find client-side profiles within the 'profiles' block if in a virtual server block
                if in_virtual_server:
                    if 'profiles {' in line:
                        profile_block = True
                    elif '}' in line and profile_block:
                        profile_block = False  # End of the profile block

                    if profile_block:
                        # Regex to find clientssl profiles with 'context clientside'
                        match = re.search(r'(\S+) \{ context clientside \}', line)
                        if match:
                            client_side_profile = match.group(1)
                            client_side_profiles.append(client_side_profile)

    return results

# Usage
config_path = 'path_to_your_config_file.txt'
virtual_servers = read_config(config_path)
for server in virtual_servers:
    print(f"Virtual Server: {server['virtual_server']}")
    if server['client_side_profiles']:
        for profile in server['client_side_profiles']:
            print(f"  Client-side Profile: {profile}")
    else:
        print("  No client-side profiles.")