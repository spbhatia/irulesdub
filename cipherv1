import csv

# Assuming f5hostname, headers, and token are defined at the start of your script

# Function to safely request and return JSON
def safe_request(url, headers, token):
    # Your existing implementation
    pass

# Step 1: Process and export virtual servers and their client-side profiles to a CSV
url = f"https://{f5hostname}/mgmt/tm/ltm/virtual"
response = safe_request(url, headers, token)
virtual_servers = response.get('items', [])

used_profiles = set()

# Open CSV file for writing virtual server and client-side profile associations
with open('virtual_server_profiles.csv', 'w', newline='') as csvfile:
    fieldnames = ['Virtual Server Name', 'Client-side Profile Name']
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)

    writer.writeheader()

    for virtual_server in virtual_servers:
        virtual_name = virtual_server.get('name', 'No Name Found')
        virtualprofile_url = f"https://{f5hostname}/mgmt/tm/ltm/virtual/{virtual_name}/profiles"
        virtualprofile_response = safe_request(virtualprofile_url, headers, token)

        if virtualprofile_response:
            items = virtualprofile_response.get('items', [])
            for item in items:
                profile_context = item.get('context', "")
                if profile_context == "clientside":
                    profile_name = item.get('name', 'No Name Found')
                    used_profiles.add(profile_name)
                    writer.writerow({'Virtual Server Name': virtual_name, 'Client-side Profile Name': profile_name})

# Step 2: Export unused client-ssl profiles to another CSV
all_profiles_url = f"https://{f5hostname}/mgmt/tm/ltm/profile/client-ssl"
all_profiles_response = safe_request(all_profiles_url, headers, token)
all_profiles = all_profiles_response.get('items', [])

unused_profiles = [profile['name'] for profile in all_profiles if profile['name'] not in used_profiles]

with open('unused_client_ssl_profiles.csv', 'w', newline='') as csvfile:
    fieldnames = ['Unused Client-SSL Profile Name']
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)

    writer.writeheader()

    for profile in unused_profiles:
        writer.writerow({'Unused Client-SSL Profile Name': profile})